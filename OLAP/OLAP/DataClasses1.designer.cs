#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OLAP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OLAP1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCUAHANG(CUAHANG instance);
    partial void UpdateCUAHANG(CUAHANG instance);
    partial void DeleteCUAHANG(CUAHANG instance);
    partial void InsertFACT(FACT instance);
    partial void UpdateFACT(FACT instance);
    partial void DeleteFACT(FACT instance);
    partial void InsertGIONG(GIONG instance);
    partial void UpdateGIONG(GIONG instance);
    partial void DeleteGIONG(GIONG instance);
    partial void InsertKHUVUC(KHUVUC instance);
    partial void UpdateKHUVUC(KHUVUC instance);
    partial void DeleteKHUVUC(KHUVUC instance);
    partial void InsertNAM(NAM instance);
    partial void UpdateNAM(NAM instance);
    partial void DeleteNAM(NAM instance);
    partial void InsertNGAY(NGAY instance);
    partial void UpdateNGAY(NGAY instance);
    partial void DeleteNGAY(NGAY instance);
    partial void InsertTHANG(THANG instance);
    partial void UpdateTHANG(THANG instance);
    partial void DeleteTHANG(THANG instance);
    partial void InsertTRANGTRAI(TRANGTRAI instance);
    partial void UpdateTRANGTRAI(TRANGTRAI instance);
    partial void DeleteTRANGTRAI(TRANGTRAI instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::OLAP.Properties.Settings.Default.OLAP1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CUAHANG> CUAHANGs
		{
			get
			{
				return this.GetTable<CUAHANG>();
			}
		}
		
		public System.Data.Linq.Table<FACT> FACTs
		{
			get
			{
				return this.GetTable<FACT>();
			}
		}
		
		public System.Data.Linq.Table<GIONG> GIONGs
		{
			get
			{
				return this.GetTable<GIONG>();
			}
		}
		
		public System.Data.Linq.Table<KHUVUC> KHUVUCs
		{
			get
			{
				return this.GetTable<KHUVUC>();
			}
		}
		
		public System.Data.Linq.Table<NAM> NAMs
		{
			get
			{
				return this.GetTable<NAM>();
			}
		}
		
		public System.Data.Linq.Table<NGAY> NGAYs
		{
			get
			{
				return this.GetTable<NGAY>();
			}
		}
		
		public System.Data.Linq.Table<THANG> THANGs
		{
			get
			{
				return this.GetTable<THANG>();
			}
		}
		
		public System.Data.Linq.Table<TRANGTRAI> TRANGTRAIs
		{
			get
			{
				return this.GetTable<TRANGTRAI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUAHANG")]
	public partial class CUAHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_CUA_HANG;
		
		private string _TEN_CUA_HANG;
		
		private string _DIACHI;
		
		private string _MA_KHUVUC;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_CUA_HANGChanging(string value);
    partial void OnMA_CUA_HANGChanged();
    partial void OnTEN_CUA_HANGChanging(string value);
    partial void OnTEN_CUA_HANGChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnMA_KHUVUCChanging(string value);
    partial void OnMA_KHUVUCChanged();
    #endregion
		
		public CUAHANG()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_CUA_HANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_CUA_HANG
		{
			get
			{
				return this._MA_CUA_HANG;
			}
			set
			{
				if ((this._MA_CUA_HANG != value))
				{
					this.OnMA_CUA_HANGChanging(value);
					this.SendPropertyChanging();
					this._MA_CUA_HANG = value;
					this.SendPropertyChanged("MA_CUA_HANG");
					this.OnMA_CUA_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_CUA_HANG", DbType="NVarChar(50)")]
		public string TEN_CUA_HANG
		{
			get
			{
				return this._TEN_CUA_HANG;
			}
			set
			{
				if ((this._TEN_CUA_HANG != value))
				{
					this.OnTEN_CUA_HANGChanging(value);
					this.SendPropertyChanging();
					this._TEN_CUA_HANG = value;
					this.SendPropertyChanged("TEN_CUA_HANG");
					this.OnTEN_CUA_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHUVUC", DbType="NVarChar(10)")]
		public string MA_KHUVUC
		{
			get
			{
				return this._MA_KHUVUC;
			}
			set
			{
				if ((this._MA_KHUVUC != value))
				{
					this.OnMA_KHUVUCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHUVUC = value;
					this.SendPropertyChanged("MA_KHUVUC");
					this.OnMA_KHUVUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_FACT", Storage="_FACTs", ThisKey="MA_CUA_HANG", OtherKey="MA_CUA_HANG")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACT")]
	public partial class FACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_XUAT;
		
		private string _MA_GIONG;
		
		private string _MA_TRANGTRAI;
		
		private string _MA_KHUVUC;
		
		private System.Nullable<double> _SANLUONG;
		
		private string _DONVITINH;
		
		private System.Nullable<double> _TONGTIEN;
		
		private string _NGAY;
		
		private string _THANG;
		
		private string _NAM;
		
		private string _MA_CUA_HANG;
		
		private EntityRef<CUAHANG> _CUAHANG;
		
		private EntityRef<GIONG> _GIONG;
		
		private EntityRef<KHUVUC> _KHUVUC;
		
		private EntityRef<NAM> _NAM1;
		
		private EntityRef<NGAY> _NGAY1;
		
		private EntityRef<THANG> _THANG1;
		
		private EntityRef<TRANGTRAI> _TRANGTRAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_XUATChanging(string value);
    partial void OnMA_XUATChanged();
    partial void OnMA_GIONGChanging(string value);
    partial void OnMA_GIONGChanged();
    partial void OnMA_TRANGTRAIChanging(string value);
    partial void OnMA_TRANGTRAIChanged();
    partial void OnMA_KHUVUCChanging(string value);
    partial void OnMA_KHUVUCChanged();
    partial void OnSANLUONGChanging(System.Nullable<double> value);
    partial void OnSANLUONGChanged();
    partial void OnDONVITINHChanging(string value);
    partial void OnDONVITINHChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnNGAYChanging(string value);
    partial void OnNGAYChanged();
    partial void OnTHANGChanging(string value);
    partial void OnTHANGChanged();
    partial void OnNAMChanging(string value);
    partial void OnNAMChanged();
    partial void OnMA_CUA_HANGChanging(string value);
    partial void OnMA_CUA_HANGChanged();
    #endregion
		
		public FACT()
		{
			this._CUAHANG = default(EntityRef<CUAHANG>);
			this._GIONG = default(EntityRef<GIONG>);
			this._KHUVUC = default(EntityRef<KHUVUC>);
			this._NAM1 = default(EntityRef<NAM>);
			this._NGAY1 = default(EntityRef<NGAY>);
			this._THANG1 = default(EntityRef<THANG>);
			this._TRANGTRAI = default(EntityRef<TRANGTRAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_XUAT", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_XUAT
		{
			get
			{
				return this._MA_XUAT;
			}
			set
			{
				if ((this._MA_XUAT != value))
				{
					this.OnMA_XUATChanging(value);
					this.SendPropertyChanging();
					this._MA_XUAT = value;
					this.SendPropertyChanged("MA_XUAT");
					this.OnMA_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_GIONG", DbType="NVarChar(255)")]
		public string MA_GIONG
		{
			get
			{
				return this._MA_GIONG;
			}
			set
			{
				if ((this._MA_GIONG != value))
				{
					if (this._GIONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_GIONGChanging(value);
					this.SendPropertyChanging();
					this._MA_GIONG = value;
					this.SendPropertyChanged("MA_GIONG");
					this.OnMA_GIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_TRANGTRAI", DbType="NVarChar(10)")]
		public string MA_TRANGTRAI
		{
			get
			{
				return this._MA_TRANGTRAI;
			}
			set
			{
				if ((this._MA_TRANGTRAI != value))
				{
					if (this._TRANGTRAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_TRANGTRAIChanging(value);
					this.SendPropertyChanging();
					this._MA_TRANGTRAI = value;
					this.SendPropertyChanged("MA_TRANGTRAI");
					this.OnMA_TRANGTRAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHUVUC", DbType="NVarChar(255)")]
		public string MA_KHUVUC
		{
			get
			{
				return this._MA_KHUVUC;
			}
			set
			{
				if ((this._MA_KHUVUC != value))
				{
					if (this._KHUVUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_KHUVUCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHUVUC = value;
					this.SendPropertyChanged("MA_KHUVUC");
					this.OnMA_KHUVUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANLUONG", DbType="Float")]
		public System.Nullable<double> SANLUONG
		{
			get
			{
				return this._SANLUONG;
			}
			set
			{
				if ((this._SANLUONG != value))
				{
					this.OnSANLUONGChanging(value);
					this.SendPropertyChanging();
					this._SANLUONG = value;
					this.SendPropertyChanged("SANLUONG");
					this.OnSANLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONVITINH", DbType="NVarChar(255)")]
		public string DONVITINH
		{
			get
			{
				return this._DONVITINH;
			}
			set
			{
				if ((this._DONVITINH != value))
				{
					this.OnDONVITINHChanging(value);
					this.SendPropertyChanging();
					this._DONVITINH = value;
					this.SendPropertyChanged("DONVITINH");
					this.OnDONVITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="NVarChar(255)")]
		public string NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					if (this._NGAY1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="NVarChar(255)")]
		public string THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					if (this._THANG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="NVarChar(255)")]
		public string NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					if (this._NAM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_CUA_HANG", DbType="NVarChar(10)")]
		public string MA_CUA_HANG
		{
			get
			{
				return this._MA_CUA_HANG;
			}
			set
			{
				if ((this._MA_CUA_HANG != value))
				{
					if (this._CUAHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_CUA_HANGChanging(value);
					this.SendPropertyChanging();
					this._MA_CUA_HANG = value;
					this.SendPropertyChanged("MA_CUA_HANG");
					this.OnMA_CUA_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_FACT", Storage="_CUAHANG", ThisKey="MA_CUA_HANG", OtherKey="MA_CUA_HANG", IsForeignKey=true)]
		public CUAHANG CUAHANG
		{
			get
			{
				return this._CUAHANG.Entity;
			}
			set
			{
				CUAHANG previousValue = this._CUAHANG.Entity;
				if (((previousValue != value) 
							|| (this._CUAHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUAHANG.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._CUAHANG.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._MA_CUA_HANG = value.MA_CUA_HANG;
					}
					else
					{
						this._MA_CUA_HANG = default(string);
					}
					this.SendPropertyChanged("CUAHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIONG_FACT", Storage="_GIONG", ThisKey="MA_GIONG", OtherKey="MA_GIONG", IsForeignKey=true)]
		public GIONG GIONG
		{
			get
			{
				return this._GIONG.Entity;
			}
			set
			{
				GIONG previousValue = this._GIONG.Entity;
				if (((previousValue != value) 
							|| (this._GIONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIONG.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._GIONG.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._MA_GIONG = value.MA_GIONG;
					}
					else
					{
						this._MA_GIONG = default(string);
					}
					this.SendPropertyChanged("GIONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUVUC_FACT", Storage="_KHUVUC", ThisKey="MA_KHUVUC", OtherKey="MA_KHUVUC", IsForeignKey=true)]
		public KHUVUC KHUVUC
		{
			get
			{
				return this._KHUVUC.Entity;
			}
			set
			{
				KHUVUC previousValue = this._KHUVUC.Entity;
				if (((previousValue != value) 
							|| (this._KHUVUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUVUC.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._KHUVUC.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._MA_KHUVUC = value.MA_KHUVUC;
					}
					else
					{
						this._MA_KHUVUC = default(string);
					}
					this.SendPropertyChanged("KHUVUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAM_FACT", Storage="_NAM1", ThisKey="NAM", OtherKey="MANAM", IsForeignKey=true)]
		public NAM NAM1
		{
			get
			{
				return this._NAM1.Entity;
			}
			set
			{
				NAM previousValue = this._NAM1.Entity;
				if (((previousValue != value) 
							|| (this._NAM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAM1.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._NAM1.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._NAM = value.MANAM;
					}
					else
					{
						this._NAM = default(string);
					}
					this.SendPropertyChanged("NAM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGAY_FACT", Storage="_NGAY1", ThisKey="NGAY", OtherKey="MANGAY", IsForeignKey=true)]
		public NGAY NGAY1
		{
			get
			{
				return this._NGAY1.Entity;
			}
			set
			{
				NGAY previousValue = this._NGAY1.Entity;
				if (((previousValue != value) 
							|| (this._NGAY1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGAY1.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._NGAY1.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._NGAY = value.MANGAY;
					}
					else
					{
						this._NGAY = default(string);
					}
					this.SendPropertyChanged("NGAY1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANG_FACT", Storage="_THANG1", ThisKey="THANG", OtherKey="MATHANG", IsForeignKey=true)]
		public THANG THANG1
		{
			get
			{
				return this._THANG1.Entity;
			}
			set
			{
				THANG previousValue = this._THANG1.Entity;
				if (((previousValue != value) 
							|| (this._THANG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANG1.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._THANG1.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._THANG = value.MATHANG;
					}
					else
					{
						this._THANG = default(string);
					}
					this.SendPropertyChanged("THANG1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTRAI_FACT", Storage="_TRANGTRAI", ThisKey="MA_TRANGTRAI", OtherKey="MA_TRANGTRAI", IsForeignKey=true)]
		public TRANGTRAI TRANGTRAI
		{
			get
			{
				return this._TRANGTRAI.Entity;
			}
			set
			{
				TRANGTRAI previousValue = this._TRANGTRAI.Entity;
				if (((previousValue != value) 
							|| (this._TRANGTRAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANGTRAI.Entity = null;
						previousValue.FACTs.Remove(this);
					}
					this._TRANGTRAI.Entity = value;
					if ((value != null))
					{
						value.FACTs.Add(this);
						this._MA_TRANGTRAI = value.MA_TRANGTRAI;
					}
					else
					{
						this._MA_TRANGTRAI = default(string);
					}
					this.SendPropertyChanged("TRANGTRAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIONG")]
	public partial class GIONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_GIONG;
		
		private string _TEN_GIONG;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_GIONGChanging(string value);
    partial void OnMA_GIONGChanged();
    partial void OnTEN_GIONGChanging(string value);
    partial void OnTEN_GIONGChanged();
    #endregion
		
		public GIONG()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_GIONG", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_GIONG
		{
			get
			{
				return this._MA_GIONG;
			}
			set
			{
				if ((this._MA_GIONG != value))
				{
					this.OnMA_GIONGChanging(value);
					this.SendPropertyChanging();
					this._MA_GIONG = value;
					this.SendPropertyChanged("MA_GIONG");
					this.OnMA_GIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_GIONG", DbType="NVarChar(255)")]
		public string TEN_GIONG
		{
			get
			{
				return this._TEN_GIONG;
			}
			set
			{
				if ((this._TEN_GIONG != value))
				{
					this.OnTEN_GIONGChanging(value);
					this.SendPropertyChanging();
					this._TEN_GIONG = value;
					this.SendPropertyChanged("TEN_GIONG");
					this.OnTEN_GIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIONG_FACT", Storage="_FACTs", ThisKey="MA_GIONG", OtherKey="MA_GIONG")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.GIONG = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.GIONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUVUC")]
	public partial class KHUVUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_KHUVUC;
		
		private string _TEN_KHUVUC;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_KHUVUCChanging(string value);
    partial void OnMA_KHUVUCChanged();
    partial void OnTEN_KHUVUCChanging(string value);
    partial void OnTEN_KHUVUCChanged();
    #endregion
		
		public KHUVUC()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHUVUC", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_KHUVUC
		{
			get
			{
				return this._MA_KHUVUC;
			}
			set
			{
				if ((this._MA_KHUVUC != value))
				{
					this.OnMA_KHUVUCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHUVUC = value;
					this.SendPropertyChanged("MA_KHUVUC");
					this.OnMA_KHUVUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_KHUVUC", DbType="NVarChar(255)")]
		public string TEN_KHUVUC
		{
			get
			{
				return this._TEN_KHUVUC;
			}
			set
			{
				if ((this._TEN_KHUVUC != value))
				{
					this.OnTEN_KHUVUCChanging(value);
					this.SendPropertyChanging();
					this._TEN_KHUVUC = value;
					this.SendPropertyChanged("TEN_KHUVUC");
					this.OnTEN_KHUVUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUVUC_FACT", Storage="_FACTs", ThisKey="MA_KHUVUC", OtherKey="MA_KHUVUC")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.KHUVUC = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.KHUVUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAM")]
	public partial class NAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANAM;
		
		private System.Nullable<double> _NAM1;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANAMChanging(string value);
    partial void OnMANAMChanged();
    partial void OnNAM1Changing(System.Nullable<double> value);
    partial void OnNAM1Changed();
    #endregion
		
		public NAM()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAM", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANAM
		{
			get
			{
				return this._MANAM;
			}
			set
			{
				if ((this._MANAM != value))
				{
					this.OnMANAMChanging(value);
					this.SendPropertyChanging();
					this._MANAM = value;
					this.SendPropertyChanged("MANAM");
					this.OnMANAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NAM", Storage="_NAM1", DbType="Float")]
		public System.Nullable<double> NAM1
		{
			get
			{
				return this._NAM1;
			}
			set
			{
				if ((this._NAM1 != value))
				{
					this.OnNAM1Changing(value);
					this.SendPropertyChanging();
					this._NAM1 = value;
					this.SendPropertyChanged("NAM1");
					this.OnNAM1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAM_FACT", Storage="_FACTs", ThisKey="MANAM", OtherKey="NAM")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.NAM1 = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.NAM1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGAY")]
	public partial class NGAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANGAY;
		
		private System.Nullable<double> _NGAY1;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANGAYChanging(string value);
    partial void OnMANGAYChanged();
    partial void OnNGAY1Changing(System.Nullable<double> value);
    partial void OnNGAY1Changed();
    #endregion
		
		public NGAY()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANGAY", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANGAY
		{
			get
			{
				return this._MANGAY;
			}
			set
			{
				if ((this._MANGAY != value))
				{
					this.OnMANGAYChanging(value);
					this.SendPropertyChanging();
					this._MANGAY = value;
					this.SendPropertyChanged("MANGAY");
					this.OnMANGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NGAY", Storage="_NGAY1", DbType="Float")]
		public System.Nullable<double> NGAY1
		{
			get
			{
				return this._NGAY1;
			}
			set
			{
				if ((this._NGAY1 != value))
				{
					this.OnNGAY1Changing(value);
					this.SendPropertyChanging();
					this._NGAY1 = value;
					this.SendPropertyChanged("NGAY1");
					this.OnNGAY1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGAY_FACT", Storage="_FACTs", ThisKey="MANGAY", OtherKey="NGAY")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.NGAY1 = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.NGAY1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THANG")]
	public partial class THANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATHANG;
		
		private System.Nullable<double> _THANG1;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHANGChanging(string value);
    partial void OnMATHANGChanged();
    partial void OnTHANG1Changing(System.Nullable<double> value);
    partial void OnTHANG1Changed();
    #endregion
		
		public THANG()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHANG", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATHANG
		{
			get
			{
				return this._MATHANG;
			}
			set
			{
				if ((this._MATHANG != value))
				{
					this.OnMATHANGChanging(value);
					this.SendPropertyChanging();
					this._MATHANG = value;
					this.SendPropertyChanged("MATHANG");
					this.OnMATHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="THANG", Storage="_THANG1", DbType="Float")]
		public System.Nullable<double> THANG1
		{
			get
			{
				return this._THANG1;
			}
			set
			{
				if ((this._THANG1 != value))
				{
					this.OnTHANG1Changing(value);
					this.SendPropertyChanging();
					this._THANG1 = value;
					this.SendPropertyChanged("THANG1");
					this.OnTHANG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANG_FACT", Storage="_FACTs", ThisKey="MATHANG", OtherKey="THANG")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.THANG1 = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.THANG1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANGTRAI")]
	public partial class TRANGTRAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_TRANGTRAI;
		
		private string _TEN_TRANGTRAI;
		
		private string _MA_KHUVUC;
		
		private string _DIACHI;
		
		private System.Nullable<int> _SOCHUONG;
		
		private EntitySet<FACT> _FACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_TRANGTRAIChanging(string value);
    partial void OnMA_TRANGTRAIChanged();
    partial void OnTEN_TRANGTRAIChanging(string value);
    partial void OnTEN_TRANGTRAIChanged();
    partial void OnMA_KHUVUCChanging(string value);
    partial void OnMA_KHUVUCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSOCHUONGChanging(System.Nullable<int> value);
    partial void OnSOCHUONGChanged();
    #endregion
		
		public TRANGTRAI()
		{
			this._FACTs = new EntitySet<FACT>(new Action<FACT>(this.attach_FACTs), new Action<FACT>(this.detach_FACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_TRANGTRAI", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_TRANGTRAI
		{
			get
			{
				return this._MA_TRANGTRAI;
			}
			set
			{
				if ((this._MA_TRANGTRAI != value))
				{
					this.OnMA_TRANGTRAIChanging(value);
					this.SendPropertyChanging();
					this._MA_TRANGTRAI = value;
					this.SendPropertyChanged("MA_TRANGTRAI");
					this.OnMA_TRANGTRAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TRANGTRAI", DbType="NVarChar(100)")]
		public string TEN_TRANGTRAI
		{
			get
			{
				return this._TEN_TRANGTRAI;
			}
			set
			{
				if ((this._TEN_TRANGTRAI != value))
				{
					this.OnTEN_TRANGTRAIChanging(value);
					this.SendPropertyChanging();
					this._TEN_TRANGTRAI = value;
					this.SendPropertyChanged("TEN_TRANGTRAI");
					this.OnTEN_TRANGTRAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHUVUC", DbType="NVarChar(10)")]
		public string MA_KHUVUC
		{
			get
			{
				return this._MA_KHUVUC;
			}
			set
			{
				if ((this._MA_KHUVUC != value))
				{
					this.OnMA_KHUVUCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHUVUC = value;
					this.SendPropertyChanged("MA_KHUVUC");
					this.OnMA_KHUVUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCHUONG", DbType="Int")]
		public System.Nullable<int> SOCHUONG
		{
			get
			{
				return this._SOCHUONG;
			}
			set
			{
				if ((this._SOCHUONG != value))
				{
					this.OnSOCHUONGChanging(value);
					this.SendPropertyChanging();
					this._SOCHUONG = value;
					this.SendPropertyChanged("SOCHUONG");
					this.OnSOCHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTRAI_FACT", Storage="_FACTs", ThisKey="MA_TRANGTRAI", OtherKey="MA_TRANGTRAI")]
		public EntitySet<FACT> FACTs
		{
			get
			{
				return this._FACTs;
			}
			set
			{
				this._FACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTRAI = this;
		}
		
		private void detach_FACTs(FACT entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTRAI = null;
		}
	}
}
#pragma warning restore 1591
